---
import Layout from "../../../layouts/Layout.astro";
import { getCollection } from "astro:content";

type Props = {
    product: Product;
};

interface Product {
    title: string;
    description: string;
    image: string;
    features: string[];
    specifications: {
        [key: string]: string;
    };
}

export async function getStaticPaths() {
    const accessories = await getCollection("accessories");
    return accessories.map((entry) => ({
        params: { slug: entry.slug },
        props: { product: entry.data as Product },
    }));
}

const { product } = Astro.props as Props;
---

<Layout
    title={`${product.title} - UNV Dubai`}
    description={product.description}
>
    <section class="py-12 bg-gradient-to-b from-gray-50 to-white dark:from-gray-900 dark:to-gray-800">
        <div class="container mx-auto px-4 max-w-6xl">
            {/* Product Header */}
            <div class="text-center mb-8">
                <h1 class="text-3xl font-bold mb-3 bg-gradient-to-r from-primary to-blue-600 bg-clip-text text-transparent">
                    {product.title}
                </h1>
                <p class="text-gray-600 dark:text-gray-300 max-w-2xl mx-auto text-sm">
                    {product.description}
                </p>
            </div>

            <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
                {/* Product Image */}
                <div class="relative group">
                    <img
                        src={product.image}
                        alt={product.title}
                        class="w-full rounded-lg shadow-md transition-transform duration-300 group-hover:scale-102"
                    />
                </div>

                {/* Product Details */}
                <div class="bg-white dark:bg-gray-800 rounded-lg p-6 shadow-md">
                    {/* Tabs */}
                    <div class="flex gap-4 mb-6">
                        <button
                            class="tab-button flex-1 active px-6 py-4 rounded-lg text-sm font-semibold transition-all duration-200 relative overflow-hidden border-2 group"
                            data-tab="description"
                            aria-selected="true"
                        >
                            <span class="relative z-10">Features</span>
                            <div class="absolute inset-0 bg-primary opacity-0 group-hover:opacity-100 transition-opacity duration-200"></div>
                        </button>
                        <button
                            class="tab-button flex-1 px-6 py-4 rounded-lg text-sm font-semibold transition-all duration-200 relative overflow-hidden border-2 group"
                            data-tab="specifications"
                            aria-selected="false"
                        >
                            <span class="relative z-10">Specs</span>
                            <div class="absolute inset-0 bg-primary opacity-0 group-hover:opacity-100 transition-opacity duration-200"></div>
                        </button>
                    </div>

                    {/* Tab Content */}
                    <div class="tab-content block" id="description">
                        <div class="space-y-3">
                            {product.features.map((feature) => (
                                <div class="flex items-center gap-3 p-2">
                                    <svg class="w-5 h-5 text-primary" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                                    </svg>
                                    <p class="text-sm text-gray-700 dark:text-gray-300">{feature}</p>
                                </div>
                            ))}
                        </div>
                    </div>

                    <div class="tab-content hidden" id="specifications">
                        <div class="grid grid-cols-1 gap-3">
                            {Object.entries(product.specifications).map(([key, value]) => (
                                <div class="border-l-2 border-primary pl-3 py-2">
                                    <p class="text-xs text-gray-500 dark:text-gray-400 uppercase">{key}</p>
                                    <p class="text-sm font-medium text-gray-900 dark:text-gray-100">{value}</p>
                                </div>
                            ))}
                        </div>
                    </div>

                    <div class="mt-6">
                        <a
                            href="/contact"
                            class="group relative inline-flex items-center justify-center w-full px-6 py-3.5 rounded-lg text-sm font-semibold overflow-hidden bg-gradient-to-r from-blue-500 to-indigo-600 text-white transition-all duration-300 hover:from-indigo-600 hover:to-blue-500 shadow-lg hover:shadow-xl border border-transparent hover:border-blue-300"
                        >
                            <span class="relative z-10 flex items-center">
                                Contact Sales
                                <svg 
                                    class="h-4 w-4 ml-2 transform transition-transform duration-300 group-hover:translate-x-1" 
                                    fill="none" 
                                    stroke="currentColor" 
                                    viewBox="0 0 24 24"
                                >
                                    <path 
                                        stroke-linecap="round" 
                                        stroke-linejoin="round" 
                                        stroke-width="2" 
                                        d="M17 8l4 4m0 0l-4 4m4-4H3"
                                    ></path>
                                </svg>
                            </span>
                            <div class="absolute inset-0 bg-blue-100/20 opacity-0 group-hover:opacity-30 transition-opacity duration-300"></div>
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </section>
</Layout>

<script>
    document.addEventListener("DOMContentLoaded", () => {
        const tabs = document.querySelectorAll(".tab-button");
        const contents = document.querySelectorAll(".tab-content");

        // Set initial active state
        const initialActiveTab = document.querySelector('[data-tab="description"]');
        setActiveTab(initialActiveTab);

        tabs.forEach((tab) => {
            tab.addEventListener("click", () => {
                tabs.forEach((t) => t.classList.remove("active-tab"));
                setActiveTab(tab);

                const targetId = tab.getAttribute("data-tab");
                contents.forEach((content) => {
                    content.classList.toggle("block", content.id === targetId);
                    content.classList.toggle("hidden", content.id !== targetId);
                });
            });
        });

        function setActiveTab(tab) {
            tabs.forEach((t) => {
                const isActive = t === tab;
                t.setAttribute("aria-selected", isActive.toString());
                if (isActive) {
                    t.classList.add("border-primary", "text-primary");
                    t.querySelector(".absolute").classList.add("opacity-10");
                } else {
                    t.classList.remove("border-primary", "text-primary");
                    t.classList.add("border-gray-200", "text-gray-600");
                    t.querySelector(".absolute").classList.remove("opacity-10");
                }
            });
        }
    });
</script>

