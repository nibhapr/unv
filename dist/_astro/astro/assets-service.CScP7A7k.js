const g="modulepreload",p=function(e){return"/"+e},m={},w=function(t,o,a){let c=Promise.resolve();if(o&&o.length>0){document.getElementsByTagName("link");const n=document.querySelector("meta[property=csp-nonce]"),r=n?.nonce||n?.getAttribute("nonce");c=Promise.allSettled(o.map(s=>{if(s=p(s),s in m)return;m[s]=!0;const d=s.endsWith(".css"),u=d?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${s}"]${u}`))return;const l=document.createElement("link");if(l.rel=d?"stylesheet":g,d||(l.as="script"),l.crossOrigin="",l.href=s,r&&l.setAttribute("nonce",r),document.head.appendChild(l),d)return new Promise((f,h)=>{l.addEventListener("load",f),l.addEventListener("error",()=>h(new Error(`Unable to preload CSS for ${s}`)))})}))}function i(n){const r=new Event("vite:preloadError",{cancelable:!0});if(r.payload=n,window.dispatchEvent(r),!r.defaultPrevented)throw n}return c.then(n=>{for(const r of n||[])r.status==="rejected"&&i(r.reason);return t().catch(i)})};function b(e){return e[0]==="/"?e:"/"+e}function y(e){return e.endsWith("/")?e.slice(0,e.length-1):e}function N(e){return/^(?:http|ftp|https|ws):?\/\//.test(e)||e.startsWith("data:")}function C(e,t){return e.startsWith(t)?e.slice(y(t).length):e}const E=["jpeg","jpg","png","tiff","webp","gif","svg","avif"],A={name:"MissingMediaQueryDirective",title:"Missing value for `client:media` directive.",message:'Media query not provided for `client:media` directive. A media query similar to `client:media="(max-width: 600px)"` must be provided'},M={name:"NoMatchingRenderer",title:"No matching renderer found.",message:(e,t,o,a)=>`Unable to render \`${e}\`.

${a>0?`There ${o?"are":"is"} ${a} renderer${o?"s":""} configured in your \`astro.config.mjs\` file,
but ${o?"none were":"it was not"} able to server-side render \`${e}\`.`:`No valid renderer was found ${t?`for the \`.${t}\` file extension.`:"for this file extension."}`}`,hint:e=>`Did you mean to enable the ${e} integration?

See https://docs.astro.build/en/guides/framework-components/ for more information on how to install and configure integrations.`},k={name:"NoClientEntrypoint",title:"No client entrypoint specified in renderer.",message:(e,t,o)=>`\`${e}\` component has a \`client:${t}\` directive, but no client entrypoint was provided by \`${o}\`.`,hint:"See https://docs.astro.build/en/reference/integrations-reference/#addrenderer-option for more information on how to configure your renderer."},S={name:"NoClientOnlyHint",title:"Missing hint on client:only directive.",message:e=>`Unable to render \`${e}\`. When using the \`client:only\` hydration strategy, Astro needs a hint to use the correct renderer.`,hint:e=>`Did you mean to pass \`client:only="${e}"\`? See https://docs.astro.build/en/reference/directives-reference/#clientonly for more information on client:only`},U={name:"NoMatchingImport",title:"No import found for component.",message:e=>`Could not render \`${e}\`. No matching import has been found for \`${e}\`.`,hint:"Please make sure the component is properly imported."},I={name:"InvalidComponentArgs",title:"Invalid component arguments.",message:e=>`Invalid arguments passed to${e?` <${e}>`:""} component.`,hint:"Astro components cannot be rendered directly via function call, such as `Component()` or `{items.map(Component)}`."},P={name:"UnknownContentCollectionError",title:"Unknown Content Collection Error."};function v(e){return e.replace(/\r\n|\r(?!\n)|\n/g,`
`)}function $(e,t){if(!t||t.line===void 0||t.column===void 0)return"";const o=v(e).split(`
`).map(n=>n.replace(/\t/g,"  ")),a=[];for(let n=-2;n<=2;n++)o[t.line+n]&&a.push(t.line+n);let c=0;for(const n of a){let r=`> ${n}`;r.length>c&&(c=r.length)}let i="";for(const n of a){const r=n===t.line-1;i+=r?"> ":"  ",i+=`${n+1} | ${o[n]}
`,r&&(i+=`${Array.from({length:c}).join(" ")}  | ${Array.from({length:t.column}).join(" ")}^
`)}return i}class L extends Error{loc;title;hint;frame;type="AstroError";constructor(t,o){const{name:a,title:c,message:i,stack:n,location:r,hint:s,frame:d}=t;super(i,o),this.title=c,this.name=a,i&&(this.message=i),this.stack=n||this.stack,this.loc=r,this.hint=s,this.frame=d}setLocation(t){this.loc=t}setName(t){this.name=t}setMessage(t){this.message=t}setHint(t){this.hint=t}setFrame(t,o){this.frame=$(t,o)}static is(t){return t.type==="AstroError"}}export{L as A,I,A as M,U as N,P as U,E as V,w as _,M as a,S as b,k as c,N as i,b as p,C as r};
