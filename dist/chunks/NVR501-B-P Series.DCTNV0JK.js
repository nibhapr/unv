import{c as createComponent,r as renderTemplate,m as maybeRenderHead,u as unescapeHTML}from"./astro/server.BS8ABHYh.js";import"kleur/colors";import"clsx";const html="",frontmatter={title:"NVR501-B-P Series",description:"1 HDD 4/8-channel input Network Video Recorder with PoE support, featuring Ultra 265/H.265/H.264 video formats and up to 16 Megapixels resolution recording",image:"/images/categories/products/nvr/NVR501-B-P Series.png",features:["Support Ultra 265/H.265/H.264 video formats","4/8-channel input","Plug & Play with 4/8 independent PoE network interfaces","Support mainstream cameras of ONVIF conformance (Profile S, Profile G, Profile T) and RTSP protocols","Support HDMI and VGA simultaneous output","Up to 16 Megapixels resolution recording","ANR technology to enhance storage reliability when network is disconnected","Support cloud upgrade"],specifications:{channels:"4/8-channel",storage:"1 SATA Interface, up to 16TB",bandwidth:"80Mbps",videoOutput:"1 HDMI, 1 VGA",compression:"Ultra 265, H.265, H.264",powerSupply:"DC 48V/1.35A (4-ch), DC 52V/1.8A (8-ch)",dimensions:'260mm × 222mm × 47mm (10.2"×8.7"×1.8")',networkInterface:"1 RJ45 10M/100M self-adaptive",models:[{name:"NVR501-04B-P4",details:[{"IP Video Input":"4-ch"},{"PoE Interface":"4 RJ45 10M/100M self-adaptive"},{"Power Supply":"DC 48V/1.35A"},{"Max PoE Power":"30W single port, 50W total"}]},{name:"NVR501-08B-P8",details:[{"IP Video Input":"8-ch"},{"PoE Interface":"8 RJ45 10M/100M self-adaptive"},{"Power Supply":"DC 52V/1.8A"},{"Max PoE Power":"30W single port, 75W total"}]}],general:[{"Decoding Format":"Ultra 265, H.265, H.264"},{"Hard Drive":"1 SATA Interface, up to 16TB"},{"Network Interface":"1 RJ45 10M/100M self-adaptive"},{"USB Ports":"1× USB2.0, 1× USB3.0"},{Dimensions:'260mm × 222mm × 47mm (10.2"×8.7"×1.8")'},{"Working Temperature":"-10℃ to 55℃ (14℉ to 131℉)"},{Certifications:"CE, FCC, UL, RoHS, WEEE"}]}},file="D:/unv/src/content/nvr/NVR501-B-P Series.md",url=void 0;function rawContent(){return""}function compiledContent(){return""}function getHeadings(){return[]}const Content=createComponent(((e,t,o)=>{const{layout:r,...n}=frontmatter;return n.file=file,n.url=url,renderTemplate`${maybeRenderHead()}${unescapeHTML("")}`}));export{Content,compiledContent,Content as default,file,frontmatter,getHeadings,rawContent,url};